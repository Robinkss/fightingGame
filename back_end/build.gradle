plugins {
    id 'java'
    id 'io.quarkus'
    id 'org.sonarqube' version "4.4.1.3373"
    id 'jacoco'
}

repositories {
    mavenCentral()
    mavenLocal()
}

dependencies {
    implementation 'io.quarkus:quarkus-resteasy-reactive-jsonb'
    implementation 'io.quarkus:quarkus-smallrye-reactive-messaging-mqtt'
    implementation enforcedPlatform("${quarkusPlatformGroupId}:${quarkusPlatformArtifactId}:${quarkusPlatformVersion}")
    implementation 'io.quarkus:quarkus-arc'
    implementation 'io.quarkus:quarkus-resteasy-reactive'
    testImplementation 'io.quarkus:quarkus-junit5'
    testImplementation 'io.rest-assured:rest-assured'
    testImplementation "io.quarkus:quarkus-jacoco"
    testImplementation 'org.mockito:mockito-core:3.11.2'
    testImplementation 'org.awaitility:awaitility:4.2.1'
    compileOnly 'org.projectlombok:lombok:1.18.30'
    annotationProcessor 'org.projectlombok:lombok:1.18.30'

    implementation 'io.quarkus:quarkus-container-image-jib'
    implementation 'io.quarkus:quarkus-kubernetes'
    implementation 'org.projectlombok:lombok:1.18.30'
    implementation 'com.fasterxml.jackson.core:jackson-databind:2.16.1'
    implementation 'org.eclipse.paho:org.eclipse.paho.client.mqttv3:1.2.5'
    implementation 'io.quarkus:quarkus-swagger-ui'
    implementation 'io.quarkus:quarkus-smallrye-openapi'

}


group 'org.acme'
version '1.0.0-SNAPSHOT'

java {
    sourceCompatibility = JavaVersion.VERSION_17
    targetCompatibility = JavaVersion.VERSION_17
}

test {
    systemProperty "java.util.logging.manager", "org.jboss.logmanager.LogManager"
    finalizedBy jacocoTestReport
    jacoco {
        excludeClassLoaders = ["*QuarkusClassLoader"]
        destinationFile = layout.buildDirectory.file("jacoco-quarkus.exec").get().asFile
    }
    jacocoTestReport.enabled = true
}

sonar {
    properties {
        property "sonar.projectKey", "projet24"
        property "sonar.token", "sqp_8c74ad7a055f3743b3f1209b359348ab07619af0"
        property "sonar.login", "polytech"
        property "sonar.password", "azerty123456"
        property "sonar.projectName", "projet24"
        property "sonar.qualitygate.wait", true
        property "sonar.host.url", "https://sonar.home.lange.xyz"
        tasks.jacocoTestReport.configure {
            property("sonar.coverage.jacoco.xmlReportPaths", ["build/reports/jacoco/test/jacocoTestReport.xml"])
        }
    }
}

compileJava {
    options.encoding = 'UTF-8'
    options.compilerArgs << '-parameters'
}

compileTestJava {
    options.encoding = 'UTF-8'
}

jacocoTestReport {
    reports {
        xml.required = true
        csv.required = true
        html.required = true
    }
}